using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;
using System.Data.SqlClient;
using System.Text;
using System.Configuration;
using System.Drawing;

namespace Balanced_Scorecard
{
    public partial class delete_objective : System.Web.UI.Page
    {
        string str_connect = ConfigurationManager.ConnectionStrings["MyConnection"].ConnectionString;
        protected void Page_Load(object sender, EventArgs e)
        {
            if (!IsPostBack)
            {
                if (Session["user_name"] == null)
                {
                    Response.Redirect("~/index.aspx");
                }
                ((Label)Master.FindControl("LabelUsername")).Text = Session["user_name"].ToString();
                var page = Request.QueryString["page"];
                var header_id = Request.QueryString["header_id"];
                var period_id = Request.QueryString["period_id"];

                individual_scorecard_link.Attributes.Add("href", "individual_scorecard.aspx?page="+page+"&id="+period_id+"");
                back_link.Attributes.Add("href", "individual_scorecard.aspx?page=" + page + "&id=" + period_id + "");

                SqlDataAdapter adapter = new SqlDataAdapter();
                DataSet ds = new DataSet();

                string string_select_individual_detail = "SELECT * FROM IndividualMeasures_Detail WHERE IndividualHeader_ID="+header_id+" AND data_status='exist'";
                string string_select_individual_header = "SELECT IndividualHeader_KPI FROM IndividualMeasures_Header WHERE IndividualHeader_ID="+header_id+"";

                SqlConnection conn = new SqlConnection(str_connect);
                conn.Open();
                SqlCommand sql_select_individual_header = new SqlCommand(string_select_individual_header, conn);
                IndividualHeaderBreadcrumb.Text = sql_select_individual_header.ExecuteScalar().ToString();
                IndividualHeaderTitle.Text = sql_select_individual_header.ExecuteScalar().ToString();
                IndividualHeaderList.Text = sql_select_individual_header.ExecuteScalar().ToString();

                SqlCommand sql_select_individual_detail = new SqlCommand(string_select_individual_detail, conn);
                adapter.SelectCommand = sql_select_individual_detail;
                adapter.Fill(ds);
                adapter.Dispose();
                sql_select_individual_detail.Dispose();

                conn.Close();

                if (ds.Tables[0].Rows.Count == 0)//jika tidak ada Specific Objectives
                {
                    ds.Tables[0].Rows.Add(ds.Tables[0].NewRow());
                    GridView1.DataSource = ds;
                    GridView1.DataBind();
                    int columncount = GridView1.Rows[0].Cells.Count;
                    GridView1.Rows[0].Cells.Clear();
                    GridView1.Rows[0].Cells.Add(new TableCell());
                    GridView1.Rows[0].Cells[0].ColumnSpan = columncount;
                    GridView1.Rows[0].Cells[0].Text = "No Specific Objective To Display";
                    GridView1.Rows[0].Cells[0].HorizontalAlign = HorizontalAlign.Center;
                }
                else//jika ada Specific Objectives
                {
                    GridView1.DataSource = ds.Tables[0];
                    GridView1.DataBind();
                }
            }
        }

        protected void grv_OnRowDataBound(object sender, GridViewRowEventArgs e)
        {
            if (e.Row.RowType == DataControlRowType.DataRow)
            {
                var measure_by = (Label)e.Row.FindControl("LabelMeasureByTarget");
                var target = (Label)e.Row.FindControl("LabelTarget");
                var result = (Label)e.Row.FindControl("LabelResult");
                if (measure_by.Text == "Month")
                {
                    string month_num_target = target.Text;
                    string month_num_result = result.Text;
                    string month_name_target = getMonthName(month_num_target);
                    string month_name_result = getMonthName(month_num_result);
                    e.Row.Cells[2].Text = month_name_target;
                    e.Row.Cells[3].Text = month_name_result;
                }
                else if (measure_by.Text == "Numbers")
                {
                    e.Row.Cells[2].Text = target.Text;
                    e.Row.Cells[3].Text = result.Text;
                }
            }
        }

        protected void OnClickDelete(object sender, EventArgs e)
        {
            StringBuilder sb_deleted_specific_objective = new StringBuilder();

            //harusnya ada USERNAME!
            var period_id = Request.QueryString["period_id"];
            var page = Request.QueryString["page"];
            var header_id = Request.QueryString["header_id"];

            using (SqlConnection conn = new SqlConnection(str_connect))
            {
                conn.Open();
                string user_update, date_update;
                int counter = 1;
                user_update = Session["user_name"].ToString();
                date_update = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");

                foreach (GridViewRow row in GridView1.Rows)
                {
                    if (row.RowType == DataControlRowType.DataRow)
                    {
                        CheckBox chkRow = (row.Cells[6].FindControl("chkCtrl") as CheckBox);
                        if (chkRow.Checked)
                        {
                            string spec_obj = row.Cells[1].Text;
                            //asumsi header_id = 5
                            string string_update_specific_obj = "UPDATE IndividualMeasures_Detail SET data_status='deleted', user_update=@user_update, date_update=@date_update WHERE IndividualDetail_Title='" + spec_obj + "' AND IndividualHeader_ID="+header_id+"";
                            SqlCommand sql_update_specific_obj = new SqlCommand(string_update_specific_obj, conn);
                            sql_update_specific_obj.Parameters.AddWithValue("@user_update", user_update);
                            sql_update_specific_obj.Parameters.AddWithValue("@date_update", date_update);
                            sql_update_specific_obj.ExecuteNonQuery();
                            sb_deleted_specific_objective.Append("  " + counter + ". " + spec_obj + "\\n");
                            counter++;
                        }
                    }
                }//end of ForEach(GridViewRow)

                string string_update_header = "exec SP_UpdateIndividualHeader " + header_id + "";
                SqlCommand sql_update_header = new SqlCommand(string_update_header, conn);
                sql_update_header.ExecuteNonQuery();

                if (counter > 1)
                {
                    ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "redirect", "alert('Delete Specific Objectives:\\n" + sb_deleted_specific_objective + "  \\nSUCCESS!'); window.location='" + Request.ApplicationPath + "/delete_objective.aspx?page=" + page + "&period_id=" + period_id + "&header_id=" + header_id + "';", true);
                }
                else
                {
                    ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "redirect", "alert('There is no selected specific objective to be deleted!'); window.location='" + Request.ApplicationPath + "/delete_objective.aspx?page=" + page + "&period_id=" + period_id + "&header_id=" + header_id + "';", true);
                }
                conn.Close();
            }
        }

        public string getMonthName(string month_num)
        {
            string month_name = "";
            switch (month_num)
            {
                case "0 ":
                    month_name = "-";
                    break;
                case "1 ":
                    month_name = "January";
                    break;
                case "2 ":
                    month_name = "February";
                    break;
                case "3 ":
                    month_name = "March";
                    break;
                case "4 ":
                    month_name = "April";
                    break;
                case "5 ":
                    month_name = "May";
                    break;
                case "6 ":
                    month_name = "June";
                    break;
                case "7 ":
                    month_name = "July";
                    break;
                case "8 ":
                    month_name = "August";
                    break;
                case "9 ":
                    month_name = "September";
                    break;
                case "10 ":
                    month_name = "October";
                    break;
                case "11 ":
                    month_name = "November";
                    break;
                case "12 ":
                    month_name = "December";
                    break;
            }
            return month_name;
        }
    }
}